-- MySQL Script generated by MySQL Workbench
-- Sat Mar 19 00:49:30 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `db-projet` DEFAULT CHARACTER SET utf8 ;
USE `db-projet` ;
CREATE TABLE users(
   id_users INT AUTO_INCREMENT,
   email VARCHAR(50) ,
   password VARCHAR(125) ,
   name VARCHAR(50) ,
   forname VARCHAR(50) ,
   tel VARCHAR(50) ,
   PRIMARY KEY(id_users)
);

CREATE TABLE roles(
   id_roles INT AUTO_INCREMENT,
   name VARCHAR(50) ,
   PRIMARY KEY(id_roles)
);

CREATE TABLE status(
   id_status INT AUTO_INCREMENT,
   name VARCHAR(50) ,
   PRIMARY KEY(id_status)
);

CREATE TABLE doctor(
   id_doctor INT AUTO_INCREMENT,
   id_users INT NOT NULL,
   PRIMARY KEY(id_doctor),
   FOREIGN KEY(id_users) REFERENCES users(id_users)
);

CREATE TABLE appointment(
   id_rdv INT AUTO_INCREMENT,
   id_status INT,
   date_rdv DATETIME,
   PRIMARY KEY(id_rdv,id_status),
   FOREIGN KEY(id_status) REFERENCES status(id_status)
);

CREATE TABLE has_role(
   id_users INT,
   id_roles INT,
   PRIMARY KEY(id_users, id_roles),
   FOREIGN KEY(id_users) REFERENCES users(id_users),
   FOREIGN KEY(id_roles) REFERENCES roles(id_roles)
);

CREATE TABLE make_appointment(
   id_users INT,
   id_status INT,
   id_rdv INT,
   PRIMARY KEY(id_users, id_status, id_rdv),
   FOREIGN KEY(id_users) REFERENCES users(id_users),
   FOREIGN KEY(id_status, id_rdv) REFERENCES appointment(id_status, id_rdv)
);

CREATE TABLE have_appointment(
   id_status INT,
   id_rdv INT,
   id_doctor INT,
   PRIMARY KEY(id_status, id_rdv, id_doctor),
   FOREIGN KEY(id_status, id_rdv) REFERENCES appointment(id_status, id_rdv),
   FOREIGN KEY(id_doctor) REFERENCES doctor(id_doctor)
);

